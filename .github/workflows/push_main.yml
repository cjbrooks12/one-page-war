# On pushes to main, build web and Android apps. Release web app to GitHub Pages, and upload the Android APK as a
# Build Artifact

name: 'Push to `main` (Create Release Apps)'

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  buildWebApp:
    runs-on: 'macos-latest'
    env:
      GITHUB_ACTOR: '${{ github.actor }}'
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    steps:
      - uses: 'actions/checkout@v3'
        with:
          submodules: 'recursive'
          fetch-depth: 0 # all commit history and tags
      - name: 'Set up JDK 17'
        uses: 'actions/setup-java@v3'
        with:
          distribution: 'temurin'
          java-version: 17
      - name: 'Setup Pages'
        id: 'pages'
        uses: 'actions/configure-pages@v3'
      - name: 'Assemble Web Artifacts'
        run: './gradlew :composeApp:jsBrowserDevelopmentExecutableDistribution'
      - name: 'Upload artifact'
        uses: 'actions/upload-pages-artifact@v2'
        with:
          path: './composeApp/build/dist/js/developmentExecutable'
  publishWebApp:
    needs: [ 'buildWebApp' ]
    environment:
      name: 'github-pages'
      url: '${{ steps.deployment.outputs.page_url }}'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Deploy to GitHub Pages'
        id: 'deployment'
        uses: 'actions/deploy-pages@v2'

  buildAndroidDebugApp:
    runs-on: 'macos-latest'
    env:
      GITHUB_ACTOR: '${{ github.actor }}'
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    steps:
      - uses: 'actions/checkout@v3'
        with:
          submodules: 'recursive'
          fetch-depth: 0 # all commit history and tags
      - name: 'Set up JDK 17'
        uses: 'actions/setup-java@v3'
        with:
          distribution: 'temurin'
          java-version: 17
      - name: 'Assemble Android Debug Artifact'
        run: './gradlew :composeApp:assembleDebug'
      - name: 'Upload Android Debug Artifact'
        uses: 'actions/upload-artifact@v3'
        with:
          name: 'composeApp-debug'
          path: 'composeApp/build/outputs/apk/debug/composeApp-debug.apk'

  buildAndroidReleaseApp:
    runs-on: 'macos-latest'
    env:
      GITHUB_ACTOR: '${{ github.actor }}'
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      KEYSTORE_ENCODED: '${{ secrets.KEYSTORE_ENCODED }}'
      KEYSTORE_PATH: '${{ secrets.KEYSTORE_PATH }}'
      KEYSTORE_PASSWORD: '${{ secrets.KEYSTORE_PASSWORD }}'
      KEYSTORE_KEY_ALIAS: '${{ secrets.KEYSTORE_KEY_ALIAS }}'
      KEYSTORE_KEY_PASSWORD: '${{ secrets.KEYSTORE_KEY_PASSWORD }}'
    steps:
      - uses: 'actions/checkout@v3'
        with:
          submodules: 'recursive'
          fetch-depth: 0 # all commit history and tags
      - name: 'Set up JDK 17'
        uses: 'actions/setup-java@v3'
        with:
          distribution: 'temurin'
          java-version: 17
      - name: 'Assemble Android Release Artifact'
        run: './gradlew :composeApp:assembleRelease'
      - name: 'Upload Android Release Artifact'
        uses: 'actions/upload-artifact@v3'
        with:
          name: 'composeApp-release'
          path: 'composeApp/build/outputs/apk/release/composeApp-release.apk'
